// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource rpg_DB {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum tipoHabilidade {
  mental
  fisico
}

model Mestre {
  id      String @id @unique @default(uuid())
  usuario String
  senha   String
  mesa    Mesa[]

  @@map("mestre")
}

model Mesa {
  id        String          @id @default(uuid())
  Mestre    Mestre?         @relation(fields: [mestreId], references: [id])
  mestreId  String?
  jogadores JogadoresMesa[]
  monstros  MonstroMesa[]

  @@map("mesa")
}

model jogador {
  id          String          @id @unique @default(uuid())
  Mesa        JogadoresMesa[]
  usuario     String
  senha       String
  personagens personagem[]

  @@map("jogador")
}

model JogadoresMesa {
  jogadorId String  @map("jogadorId")
  mesaId    String  @map("MesaId")
  jogador   jogador @relation(fields: [jogadorId], references: [id])
  mesa      Mesa    @relation(fields: [mesaId], references: [id])

  @@id([jogadorId, mesaId])
  @@map("jogadores_mesa")
}

model personagem {
  id          String                 @id @unique @default(uuid())
  Jogador     jogador?               @relation(fields: [jogadorId], references: [id])
  jogadorId   String?
  nome        String
  nivelFisico Int
  nivelMental Int
  xp          Int
  vida        Int
  estresse    Int
  historia    String
  habilidades personagemHabilidade[]

  @@map("personagem")
}

model monstro {
  id          String              @id @unique @default(uuid())
  Mesas       MonstroMesa[]
  nome        String
  nivelFisico Int
  nivelMental Int
  xp          Int
  vida        Int
  estresse    Int
  historia    String
  habilidades monstroHabilidade[]

  @@map("monstro")
}

model MonstroMesa {
  monstroId String  @map("monstroId")
  mesaId    String  @map("mesaId")
  monstro   monstro @relation(fields: [monstroId], references: [id])
  mesa      Mesa    @relation(fields: [mesaId], references: [id])

  @@id([monstroId, mesaId])
  @@map("monstro_mesa")
}

model habilidade {
  id           String                 @id @unique @default(uuid())
  personagem   personagemHabilidade[]
  monstro      monstroHabilidade[]
  monstroId    String?
  nome         String
  descricao    String
  tipo         tipoHabilidade
}

model personagemHabilidade {
  personagem_id String     @map("personagem_id")
  habilidade_id String     @map("habilidade_id")
  personagem    personagem @relation(fields: [personagem_id], references: [id])
  habilidade    habilidade @relation(fields: [habilidade_id], references: [id])

  @@id([personagem_id, habilidade_id])
  @@map("personagem_habilidade")
}

model monstroHabilidade {
  habilidade_id String     @map("habilidade_id")
  monstro_id    String     @map("monstro_id")
  monstro       monstro    @relation(fields: [monstro_id], references: [id])
  habilidade    habilidade @relation(fields: [habilidade_id], references: [id])

  @@id([habilidade_id, monstro_id])
  @@map("monstro_habilidade")
}
